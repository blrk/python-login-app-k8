user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    # Optional: Use a more efficient event processing method if available
    # use epoll;
}

http {
    include mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript application/xml;

    ssl_protocols TLSv1.2 TLSv1.3; # Enforce strong TLS protocols (OWASP)
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE+AESGCM:CHACHA20'; # Strong and modern cipher suites (OWASP, Mozilla Recommended)
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers (OWASP)
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self';";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()"; # Deny access to sensitive browser features by default

    server {
        listen 8090 default_server;
        #listen [::]:80 default_server;
        server_name _; # Catch-all server name

        # Redirect HTTP to HTTPS (OWASP - if you have SSL configured)
        # return 301 https://$host$request_uri;

        root /usr/share/nginx/html;
        index index.html index.htm;

        # Prevent information disclosure (CIS)
        server_tokens off;

        # Block access to hidden files and directories (OWASP, CIS)
        location ~ /\.(?!well-known).* {
            deny all;
        }

        # Prevent access to backup files (OWASP)
        location ~ (~|\.bak$|\.orig$|\.swp$) {
            deny all;
        }

        # Serve static files efficiently (CIS)
        location / {
            try_files $uri $uri/ =404;
        }

        # Optional: Security for specific file types (OWASP)
        location ~* \.(txt|log)$ {
            deny all;
        }
        location ~* \.(js)$ {
            types {} text/javascript;
            default_type text/javascript;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }
        location ~* \.(css)$ {
            types {} text/css;
            default_type text/css;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }
        location ~* \.(png|jpg|jpeg|gif|svg|ico)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }
    }

    # HTTPS Server Block (if you have SSL certificates)
    # server {
    #     listen 443 ssl default_server;
    #     listen [::]:443 ssl default_server;
    #
    #     server_name yourdomain.com; # Replace with your actual domain
    #
    #     ssl_certificate /etc/nginx/ssl/yourdomain.crt; # Path to your certificate
    #     ssl_certificate_key /etc/nginx/ssl/yourdomain.key; # Path to your private key
    #
    #     root /usr/share/nginx/html;
    #     index index.html index.htm;
    #
    #     server_tokens off;
    #
    #     location ~ /\.(?!well-known).* {
    #         deny all;
    #     }
    #
    #     location ~ (~|\.bak$|\.orig$|\.swp$) {
    #         deny all;
    #     }
    #
    #     location / {
    #         try_files $uri $uri/ =404;
    #     }
    #
    #     location ~* \.(txt|log)$ {
    #         deny all;
    #     }
    #     location ~* \.(js)$ {
    #         types {} text/javascript;
    #         default_type text/javascript;
    #         expires 30d;
    #         add_header Cache-Control "public, max-age=2592000";
    #     }
    #     location ~* \.(css)$ {
    #         types {} text/css;
    #         default_type text/css;
    #         expires 30d;
    #         add_header Cache-Control "public, max-age=2592000";
    #     }
    #     location ~* \.(png|jpg|jpeg|gif|svg|ico)$ {
    #         expires 30d;
    #         add_header Cache-Control "public, max-age=2592000";
    #     }
    # }
}